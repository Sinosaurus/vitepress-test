import{l as e,f as s,G as t}from"./framework.5c8a4622.js";const a='{"title":"概论","description":"","frontmatter":{"title":"概论"},"headers":[{"level":2,"title":"vitepress 测试","slug":"vitepress-测试"},{"level":2,"title":"总结","slug":"总结"}],"relativePath":"guide/index.md","lastUpdated":1610935683688}',n={},l=t('<h2 id="vitepress-测试"><a class="header-anchor" href="#vitepress-测试" aria-hidden="true">#</a> vitepress 测试</h2><p><a href="https://vitepress.vuejs.org/" target="_blank" rel="noopener noreferrer">链接</a></p><p>由于最近一直在用<code>vuepress</code>进行文档开发，随着里面用到的组件越来越多，文件新增删除等，导致使用体验越来越差。却一直间也没有更好地替代方法。然而当知道<code>vitepress</code> 时，这个还不是很稳定，现想试试看看，能否达到自己的需求，考虑将基于<code>vuepress</code>的内容迁移到 <code>vitepress</code> 中。</p><ul><li><code>Table</code></li></ul><table><thead><tr><th>Tables</th><th style="text-align:center;">Are</th><th style="text-align:right;">Cool</th></tr></thead><tbody><tr><td>col 3 is</td><td style="text-align:center;">right-aligned</td><td style="text-align:right;">$1600</td></tr><tr><td>col 2 is</td><td style="text-align:center;">centered</td><td style="text-align:right;">$12</td></tr><tr><td>zebra stripes</td><td style="text-align:center;">are neat</td><td style="text-align:right;">$1</td></tr></tbody></table><ul><li><code>Emoji</code></li></ul><p>🎉 💯</p><p><a href="https://github.com/markdown-it/markdown-it-emoji/blob/master/lib/data/full.json" target="_blank" rel="noopener noreferrer">按道理支持的emoji</a></p><p><a href="./emoji.html">emoji</a></p><ul><li>custom containers</li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>tip内容</p></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>warning内容</p></div><div class="danger custom-block"><p class="custom-block-title">WARNING</p><p>danger内容</p></div><div class="danger custom-block"><p class="custom-block-title">custom</p><p>只是对 <code>tip</code>,<code>warning</code>,<code>danger</code> 进行换名称，配色还是原有的三种类型之一</p></div><ul><li>语法高亮</li></ul><div class="language-html line-numbers-mode"><pre><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><div class="language-js line-numbers-mode"><div class="highlight-lines"><br><div class="highlighted"> </div><br><br><br><br></div><pre><code>  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="总结"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><p><code>vitepress</code> 目前使用的体验还不是很完美。若是单纯写文档，估计会很ok，但若是想进行文档书写会是不错的选择，可若是想类似 <code>vuepress</code> 那样可以改主题，可以引入组件等操作，还得再琢磨一二，目前文档并没有相应的方案。只能通过 <code>vitepress</code> 的 <code>issue</code> 里的内容进行查看了。</p><p>综上建议是 持续观望吧，看了<code>issue</code> 说是未来 <code>vuepress</code> 会基于 <code>vite</code> 开发，听起来是个不错的消息。</p>',20);n.render=function(t,a,n,p,o,r){return e(),s("div",null,[l])};export default n;export{a as __pageData};
